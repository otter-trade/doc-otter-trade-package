const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/en/\":{\"documentCount\":1,\"nextId\":1,\"documentIds\":{\"0\":\"1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,42]},\"averageFieldLength\":[2,42],\"storedFields\":{\"0\":{\"h\":\"Doc Home\",\"t\":[\"This is an example of a project homepage. You can place your main content here.\",\"To use this layout, you need to set home: true in the page front matter.\",\"For related descriptions of configuration items, please see Project HomePage Layout Config.\"]}},\"dirtCount\":0,\"index\":[[\"see\",{\"1\":{\"0\":1}}],[\"set\",{\"1\":{\"0\":1}}],[\"descriptions\",{\"1\":{\"0\":1}}],[\"doc\",{\"0\":{\"0\":1}}],[\"related\",{\"1\":{\"0\":1}}],[\"for\",{\"1\":{\"0\":1}}],[\"front\",{\"1\":{\"0\":1}}],[\"matter\",{\"1\":{\"0\":1}}],[\"main\",{\"1\":{\"0\":1}}],[\"items\",{\"1\":{\"0\":1}}],[\"in\",{\"1\":{\"0\":1}}],[\"is\",{\"1\":{\"0\":1}}],[\"need\",{\"1\":{\"0\":1}}],[\"layout\",{\"1\":{\"0\":2}}],[\"use\",{\"1\":{\"0\":1}}],[\"the\",{\"1\":{\"0\":1}}],[\"this\",{\"1\":{\"0\":2}}],[\"true\",{\"1\":{\"0\":1}}],[\"to\",{\"1\":{\"0\":2}}],[\"here\",{\"1\":{\"0\":1}}],[\"homepage\",{\"1\":{\"0\":2}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}],[\"config\",{\"1\":{\"0\":1}}],[\"configuration\",{\"1\":{\"0\":1}}],[\"content\",{\"1\":{\"0\":1}}],[\"can\",{\"1\":{\"0\":1}}],[\"please\",{\"1\":{\"0\":1}}],[\"place\",{\"1\":{\"0\":1}}],[\"page\",{\"1\":{\"0\":1}}],[\"project\",{\"1\":{\"0\":2}}],[\"your\",{\"1\":{\"0\":1}}],[\"you\",{\"1\":{\"0\":2}}],[\"a\",{\"1\":{\"0\":1}}],[\"an\",{\"1\":{\"0\":1}}],[\"of\",{\"1\":{\"0\":2}}],[\"example\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":100,\"nextId\":100,\"documentIds\":{\"0\":\"0\",\"1\":\"2\",\"2\":\"2@0\",\"3\":\"2@1\",\"4\":\"3\",\"5\":\"3@0\",\"6\":\"3@1\",\"7\":\"4\",\"8\":\"4@0\",\"9\":\"4@1\",\"10\":\"5\",\"11\":\"5@0\",\"12\":\"5@1\",\"13\":\"6\",\"14\":\"6@0\",\"15\":\"6@1\",\"16\":\"7\",\"17\":\"7@0\",\"18\":\"7@1\",\"19\":\"8\",\"20\":\"8@0\",\"21\":\"8@1\",\"22\":\"9\",\"23\":\"9@0\",\"24\":\"9@1\",\"25\":\"10\",\"26\":\"10@0\",\"27\":\"10@1\",\"28\":\"11\",\"29\":\"11#安装方式\",\"30\":\"11#代码示例\",\"31\":\"11#数据结构示意\",\"32\":\"11#程序架构图\",\"33\":\"11#性能实测\",\"34\":\"11#程序设计思路\",\"35\":\"11#服务器分布式部署思路\",\"36\":\"11#数据的迁移-和-代理请求\",\"37\":\"11@0\",\"38\":\"11@1\",\"39\":\"12\",\"40\":\"12@0\",\"41\":\"12@1\",\"42\":\"13\",\"43\":\"13@0\",\"44\":\"13@1\",\"45\":\"14\",\"46\":\"14@0\",\"47\":\"14@1\",\"48\":\"15\",\"49\":\"15@0\",\"50\":\"15@1\",\"51\":\"16\",\"52\":\"16@0\",\"53\":\"16@1\",\"54\":\"17\",\"55\":\"17@0\",\"56\":\"17@1\",\"57\":\"18\",\"58\":\"18@0\",\"59\":\"18@1\",\"60\":\"19\",\"61\":\"19@0\",\"62\":\"19@1\",\"63\":\"20\",\"64\":\"20@0\",\"65\":\"20@1\",\"66\":\"21\",\"67\":\"21@0\",\"68\":\"21@1\",\"69\":\"22\",\"70\":\"22@0\",\"71\":\"22@1\",\"72\":\"23\",\"73\":\"23@0\",\"74\":\"23@1\",\"75\":\"24\",\"76\":\"24@0\",\"77\":\"24@1\",\"78\":\"25\",\"79\":\"25@0\",\"80\":\"25@1\",\"81\":\"26\",\"82\":\"26@0\",\"83\":\"26@1\",\"84\":\"27\",\"85\":\"27@0\",\"86\":\"27@1\",\"87\":\"28\",\"88\":\"28@0\",\"89\":\"28@1\",\"90\":\"29\",\"91\":\"29@0\",\"92\":\"29@1\",\"93\":\"30\",\"94\":\"30@0\",\"95\":\"30@1\",\"96\":\"31\",\"97\":\"31@0\",\"98\":\"31@1\",\"99\":\"32\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,1],\"2\":[null,null,1],\"3\":[null,null,1],\"4\":[2,3],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[2,3],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[2,3],\"11\":[null,null,1],\"12\":[null,null,1],\"13\":[2,3],\"14\":[null,null,1],\"15\":[null,null,1],\"16\":[2,3],\"17\":[null,null,1],\"18\":[null,null,1],\"19\":[2,3],\"20\":[null,null,1],\"21\":[null,null,1],\"22\":[1],\"23\":[null,null,1],\"24\":[null,null,1],\"25\":[1],\"26\":[null,null,1],\"27\":[null,null,1],\"28\":[3,24],\"29\":[1,8],\"30\":[1,133],\"31\":[1,243],\"32\":[1],\"33\":[1,80],\"34\":[1,29],\"35\":[1,26],\"36\":[3,51],\"37\":[null,null,1],\"38\":[null,null,1],\"39\":[1,2],\"40\":[null,null,1],\"41\":[null,null,1],\"42\":[2,3],\"43\":[null,null,1],\"44\":[null,null,1],\"45\":[2,3],\"46\":[null,null,1],\"47\":[null,null,1],\"48\":[2,3],\"49\":[null,null,1],\"50\":[null,null,1],\"51\":[2,3],\"52\":[null,null,1],\"53\":[null,null,1],\"54\":[1,1],\"55\":[null,null,1],\"56\":[null,null,1],\"57\":[2,3],\"58\":[null,null,1],\"59\":[null,null,1],\"60\":[2,3],\"61\":[null,null,1],\"62\":[null,null,1],\"63\":[2,3],\"64\":[null,null,1],\"65\":[null,null,1],\"66\":[2,3],\"67\":[null,null,1],\"68\":[null,null,1],\"69\":[2,3],\"70\":[null,null,1],\"71\":[null,null,1],\"72\":[2,3],\"73\":[null,null,1],\"74\":[null,null,1],\"75\":[1,1],\"76\":[null,null,1],\"77\":[null,null,1],\"78\":[1,2],\"79\":[null,null,1],\"80\":[null,null,1],\"81\":[1,2],\"82\":[null,null,1],\"83\":[null,null,1],\"84\":[1,2],\"85\":[null,null,1],\"86\":[null,null,1],\"87\":[1,7],\"88\":[null,null,1],\"89\":[null,null,1],\"90\":[1,2],\"91\":[null,null,1],\"92\":[null,null,1],\"93\":[1,2],\"94\":[null,null,1],\"95\":[null,null,1],\"96\":[1,2],\"97\":[null,null,1],\"98\":[null,null,1],\"99\":[1,3]},\"averageFieldLength\":[1.4611606351423763,13.52500948093473,0.9246677768874424],\"storedFields\":{\"0\":{\"h\":\"文档首页\"},\"1\":{\"h\":\"快速上手\",\"t\":[\"快速上手教程\"]},\"2\":{\"c\":[\"快速上手\"]},\"3\":{\"c\":[\"目录\"]},\"4\":{\"h\":\"文章 1\",\"t\":[\"快速上手教程\",\"该文档等待编辑 11\"]},\"5\":{\"c\":[\"快速上手\"]},\"6\":{\"c\":[\"教程\"]},\"7\":{\"h\":\"文章 2\",\"t\":[\"快速上手教程\",\"该文档等待编辑 22\"]},\"8\":{\"c\":[\"快速上手\"]},\"9\":{\"c\":[\"教程\"]},\"10\":{\"h\":\"文章 3\",\"t\":[\"快速上手教程\",\"该文档等待编辑 33\"]},\"11\":{\"c\":[\"快速上手\"]},\"12\":{\"c\":[\"教程\"]},\"13\":{\"h\":\"文章 4\",\"t\":[\"快速上手教程\",\"该文档等待编辑 44\"]},\"14\":{\"c\":[\"快速上手\"]},\"15\":{\"c\":[\"教程\"]},\"16\":{\"h\":\"文章 5\",\"t\":[\"快速上手教程\",\"该文档等待编辑 55\"]},\"17\":{\"c\":[\"快速上手\"]},\"18\":{\"c\":[\"教程\"]},\"19\":{\"h\":\"文章 6\",\"t\":[\"快速上手教程\",\"该文档等待编辑 66\"]},\"20\":{\"c\":[\"快速上手\"]},\"21\":{\"c\":[\"教程\"]},\"22\":{\"h\":\"总目录\"},\"23\":{\"c\":[\"总目录\"]},\"24\":{\"c\":[\"目录\"]},\"25\":{\"h\":\"快速访问\"},\"26\":{\"c\":[\"快速访问\"]},\"27\":{\"c\":[\"博文\"]},\"28\":{\"h\":\"1. 市场模块coin-candle\",\"t\":[\"仓库地址: https://github.com/otter-trade/coin-candle\",\"要解决的问题：\",\"国内获取数据需要科学上网\",\"交易所请求规范和行为不统一，解析方式也不统一，请求参数也比较繁琐\",\"回测时对 K 线的消耗比较大，但是频繁去交易所获取效率太慢\",\"需要用到 K 线模块的服务太多了\",\"其实团队内小伙伴写了一个版本的市场 K 线服务，但并不满意，于是花了一个周末的时间重新肝了一个版本。\"]},\"29\":{\"h\":\"安装方式\",\"t\":[\"go get github.com/otter-trade/coin-candle\"]},\"30\":{\"h\":\"代码示例\",\"t\":[\"package main import ( \\\"fmt\\\" \\\"time\\\" \\\"github.com/handy-golang/go-tools/m_cycle\\\" \\\"github.com/handy-golang/go-tools/m_time\\\" \\\"github.com/otter-trade/coin-candle/exchange_api\\\" \\\"github.com/otter-trade/coin-candle/global\\\" ) func main() { // 初始化项目配置 global.SysInit(global.SysInitOpt{ LogPath: \\\"\\\", // 日志文件存放目录，缺省值：./logs DataPath: \\\"\\\", // 数据文件存放目录，缺省值：./data ProxyURLs: []string{\\\"http://127.0.0.1:10809\\\"}, // 在拉取交易所数据时使用的代理池,没有代理则直接向交易所发起请求，国内可能会失败 }) // 启动一个定时器 m_cycle.New(m_cycle.Opt{ Func: func() { exchange_api.UpdateLocalGoodsList() // 更新商品列表至本地 exchange_api.UpdateLocalTicker() // 更新榜单数据至本地 }, SleepTime: time.Hour * 4, // 每4小时执行一次更新 }).Start() // ####### 获取商品列表的方法 ####### GoodsList, err := exchange_api.GetGoodsList() if err != nil { fmt.Println(\\\"获取商品列表失败\\\", err) } fmt.Println(\\\"GoodsList 商品总数:\\\", len(GoodsList)) // ####### 获取单个商品的详情 ####### GoodsDetail, err := exchange_api.GetGoodsDetail(exchange_api.GetGoodsDetailOpt{ GoodsId: \\\"BTC-USDT\\\", }) if err != nil { fmt.Println(\\\"获取商品详情失败\\\", err) } fmt.Println(\\\"GoodsDetail 最后更新时间\\\", GoodsDetail.GoodsId, GoodsDetail.UpdateStr) // ####### 获取榜单数据 ####### TickerList, err := exchange_api.GetTickerList() if err != nil { fmt.Println(\\\"获取榜单数据失败\\\", err) } fmt.Println(\\\"TickerList 今日上榜币种数量:\\\", len(TickerList)) // ####### 任意时间点和任意币种的 K线数据获取 ####### var startTime = m_time.GetUnixInt64() // time := m_time.TimeParse(m_time.LaySP_ss, \\\"2023-05-06 18:56:43\\\") time := m_time.TimeParse(m_time.LaySP_ss, \\\"2024-05-21 18:55:43\\\") // time := m_time.GetUnixInt64() klineMap, err := exchange_api.GetKline(global.GetKlineOpt{ GoodsId: \\\"BTC-USDT\\\", Bar: \\\"1m\\\", // 允许值 1m 5m 15m 30m 1h EndTime: time, //13 位毫秒时间戳 Limit: 320, // 1-500 的正整数 Exchange: []string{\\\"okx\\\", \\\"binance\\\"}, // 需要请求的交易所， 目前只支持 okx 和 binance }) var endTime = m_time.GetUnixInt64() var diff = endTime - startTime fmt.Println(\\\"diff:\\\", diff) if err != nil { fmt.Println(\\\"获取K线数据失败\\\", err) } fmt.Println(\\\"kline 总长度\\\", len(klineMap[\\\"binance\\\"])) }\",\"安装依赖，创建文件，然后 执行 go mod tidy 和 go run main.go 查看打印结果\"]},\"31\":{\"h\":\"数据结构示意\",\"t\":[\"商品信息数据结构\",\"这里综合了 币安、欧意，两个交易所的公共货币，也就是说该列表的任意货币都可以在 两大交易所随时进行交易，当 State 不为 live 时，说明该币种在其中一个交易所的状态出现了问题。\",\"更新频率可以在程序初始化时自定，哪怕一分钟更新一次都没问题。\",\"type GoodsType struct { GoodsId string `json:\\\"GoodsId\\\"` // OtterTrade 的交易品ID 以 OKX 为准 如 BTC-USDT State string `json:\\\"State\\\"` // 交易品现货状态，默认；live OKX 现货，币安 现货 ，OKX 合约 有一家状态不对 则为 warning UpdateUnix int64 `json:\\\"UpdateUnix\\\"` // 更新时间戳 UpdateStr string `json:\\\"UpdateStr\\\"` // 更新时间 QuoteCcy string `json:\\\"QuoteCcy\\\"` // 计价货币 如 USDT BaseCcy string `json:\\\"BaseCcy\\\"` // 基础货币 如 BTC Okx_SPOT_Info OkxInstType `json:\\\"Okx_SPOT_Info\\\"` // 欧意交易所 现货 的完整产品信息 Okx_SWAP_Info OkxInstType `json:\\\"Okx_SWAP_Info\\\"` // 欧意交易所 合约 的完整产品信息 BinanceInfo BinanceSymbolType `json:\\\"BinanceInfo\\\"` // 币安交易所的完整产品信息 }\",\"type OkxInstType struct { BaseCcy string `json:\\\"baseCcy\\\"` // 交易货币币种，如 BTC-USDT 中的 BTC ，仅适用于币币/币币杠杆 CtMult string `json:\\\"ctMult\\\"` // 合约乘数 CtType string `json:\\\"ctType\\\"` // 合约类型 linear：正向合约 inverse：反向合约 CtVal string `json:\\\"ctVal\\\"` // 合约面值 如: 一个合约 0.01 个 BTC CtValCcy string `json:\\\"ctValCcy\\\"` // 合约面值计价币种 如 BTC ExpTime string `json:\\\"expTime\\\"` // 下架时间 InstFamily string `json:\\\"instFamily\\\"` // 交易品种，如 BTC-USD，仅适用于杠杆/交割/永续/期权 InstID string `json:\\\"instId\\\"` // BTC-USDT BTC-USDT-SWAP InstType string `json:\\\"instType\\\"` // 产品类型 SPOT 或者 SWAP Lever string `json:\\\"lever\\\"` // 支持的最大杠杆倍率 ListTime string `json:\\\"listTime\\\"` // 上架时间 LotSz string `json:\\\"lotSz\\\"` // 最小下单数量 合约为 张数，现货则为 交易品数量 如 BTC 数量 MaxIcebergSz string `json:\\\"maxIcebergSz\\\"` // 冰山委托的单笔最大委托数量 MaxLmtSz string `json:\\\"maxLmtSz\\\"` // 限价单最大委托数量 合约的数量单位是张，现货的数量单位是USDT MaxMktSz string `json:\\\"maxMktSz\\\"` // 市价单的单笔最大委托数量 合约的数量单位是张，现货的数量单位是USDT MaxStopSz string `json:\\\"maxStopSz\\\"` // 止盈止损市价委托的单笔最大委托数量 MaxTriggerSz string `json:\\\"maxTriggerSz\\\"` // 计划委托委托的单笔最大委托数量 MaxTwapSz string `json:\\\"maxTwapSz\\\"` // 时间加权单的单笔最大委托数量 MinSz string `json:\\\"minSz\\\"` // 最小下单数量 合约的数量单位是张，现货的数量单位是交易货币 QuoteCcy string `json:\\\"quoteCcy\\\"` // 计价货币币种，如 BTC-USDT 中的USDT ，仅适用于币币交易 SettleCcy string `json:\\\"settleCcy\\\"` // 结算币种 ，如 USDT State string `json:\\\"state\\\"` // 产品状态 live ：交易中 ，其余状态将被过滤 TickSz string `json:\\\"tickSz\\\"` // 下单价格精度 如 0.0001 Uly string `json:\\\"uly\\\"` // 标的指数，如 BTC-USD }\",\"其余具体详细可查看源码。\",\"榜单数据\",\"type TickerType struct { GoodsId string `json:\\\"GoodsId\\\"` Okx_InstID string `json:\\\"Okx_InstID\\\"` // 欧意的主键 Binance_Symbol string `json:\\\"Binance_Symbol\\\"` // 币安的主键 BaseCcy string `json:\\\"BaseCcy\\\"` // 币种名称 State string `json:\\\"State\\\"` // 交易品现货状态，默认；live OKX 现货，币安 现货 ，OKX 合约 有一家状态不对 则为 warning Last string `json:\\\"Last\\\"` // 最新成交价 Open24H string `json:\\\"Open24H\\\"` // 24小时开盘价 High24H string `json:\\\"High24H\\\"` // 最高价 Low24H string `json:\\\"Low24H\\\"` // 最低价 OKXVol24H string `json:\\\"OKXVol24H\\\"` // OKX 24小时成交量 USDT 数量 BinanceVol24H string `json:\\\"BinanceVol24H\\\"` // Binance 24 小时成交 USDT 数量 U_R24 string `json:\\\"U_R24\\\"` // 涨幅 = (最新价-开盘价)/开盘价 Volume string `json:\\\"Volume\\\"` // 成交量总和 OkxVolRose string `json:\\\"OkxVolRose\\\"` // 欧意占比总交易量 BinanceVolRose string `json:\\\"BinanceVolRose\\\"` // 币安占比总交易量 TimeUnix int64 `json:\\\"TimeUnix\\\"` TimeStr string `json:\\\"TimeStr\\\"` }\",\"K 线\",\"因为 K 线的数据量体积比较大，所以最好的就是这种精巧的方式进行存储和传输\",\"{ okx:[ [time,o,h,l,c,v,q], //时间戳，开盘价，最高价，最低价，收盘价，成交量，成交额 [time,o,h,l,c,v,q], ], binance:[], }\",\"对应的 go 结构体如下\",\"type KlineSimpType [7]string // TimeUnix,O,H,L,C,V,Q type KlineExchangeMap map[string][]KlineSimpType{ \\\"okx\\\" : []KlineSimpType, \\\"binance\\\" : []KlineSimpType, }\",\"解析方式\",\"var fetchData = http.Get(\\\"xxxxx\\\") var KlineMap KlineExchangeMap jsoniter.Unmarshal(fetchData, &KlineMap) var okxKline = KlineMap[\\\"okx\\\"] for k , item := range okxKline{ kItem := global.KlineType{ TimeStr: item[0], O: item[1], H: item[2], L: item[3], C: item[4], V: item[5], Q: item[6], } }\"]},\"32\":{\"h\":\"程序架构图\"},\"33\":{\"h\":\"性能实测\",\"t\":[\"清除掉本地所有的数据，第一次获取 okx 和 币安 320 条 也就是需要每个交易所需要请求 4 次，一共 8 次请求，数据拼接整理并返回，加上本地网络共耗时 3685毫秒。 第二次获取相同的数据，直接从本地读取，耗时 2毫秒， 也就是同样的数据一口气读取上万条本地耗时不会超过 70毫秒 【实测，曾经写一款小时版本的策略，一年数据量 8700 条，本地 MongoDB 读取耗时 283 毫秒 】 而且这种 无需索引直接通过算法直达的 实现方式不会因为 文件数量的增多而增加查询耗时，其性能完全碾压各大数据库。 并且使用和部署方式以及环境依赖都极为简单。\",\"当然，这是针对 K 线 这种特殊结构专门设计的。 通用型数据还是数据库更合适。\",\"实测，一个文件占据空为 12kb; 无论是任何间隔的 K 线数据其一个文件体积都是一样的。 一个币种，一年的文件总数为 : 88 + 176 + 351 + 1052 + 5257 = 6924 按照 7000 来算12 * 7000 = 84000 KB 也就是说，一个币种一个交易所一年占用的存储空间约为 0.08 GB 一个交易所有效的交易币种不超过 200 ，一个交易所一年全部币种的数据全部进行本地存储 占据 16GB 空间 也就是一台硬盘空间 240 GB 的服务器就能存下两个交易所 6 年积累的全部 K 线数据。\"]},\"34\":{\"h\":\"程序设计思路\",\"t\":[\"因为是 根据 K 线的特点，基于本地文件专门设计的读写和寻址方式 ，所以即用即走，效率非常高，也非常轻量化，需要经常用到的数据就进行内存缓存。\",\"无需 redis，无需数据库。\",\"一开始是打算设计成独立服务去单独部署的，但是因为提供给用户使用的是 open-api ，无论怎么实现都需要 http 包一层。于是就设计成了 SDK 的方式。 而且，将来开发 VSCode 插件时 也需要用到这个模块，SDK 的实现方式则更加灵活和便捷。\"]},\"35\":{\"h\":\"服务器分布式部署思路\",\"t\":[\"可以罗列一份规则清单和转发地址 ，关于交易所 A 的请求转发到 服务器 A；关于币种 a-z 的可以转发到服务器 B；关于时间范围为 C 的转发到服务器 C .... 因为本地文件碎片化的属性，所以分布式部署除了增加转发时额外的网络 i/o 之外，其效率并未有差别，但是可以支持更多的高并发和存储空间。将来想要扩充交易所或者是 K 线类型可以说都非常容易且无缝衔接。\",\"如果提前计算好，还能充分利用各个服务器冗余的资源和空间。\"]},\"36\":{\"h\":\"数据的迁移 和 代理请求\",\"t\":[\"在系统初始化时，设置好 DataPath ， 程序会自动接管该目录，并在请求来临时检查对应所需文件的完整性，数据不完整则会去交易所拿取最新数据并覆盖，如果数据完整，则会直接读取并返回。\",\"同一台机器也可以同时初始化多份程序，多个不同的数据目录同时进行读写。\",\"程序会自动补全缺失的文件： 若一次请求 时间跨度超过了 4 个文件，其中三个文件本地有，则只会去交易所请求那一个没有的文件，其余文件直接读取返回。\",\"迁移数据只需要迁移对应的目录即可。\",\"请求代理 IP 池的设定： 程序初始化允许填写多个代理 ip 地址，它会随机使用其中可用的 IP 发出请求，以避免触发交易所的 IP 频率限制。同时也方便了国内用户家用电脑的本地数据调试。\",\"// 初始化项目配置 global.SysInit(global.SysInitOpt{ LogPath: \\\"\\\", // 日志文件存放目录，缺省值：./logs DataPath: \\\"\\\", // 数据文件存放目录，缺省值：./data ProxyURLs: []string{\\\"http://127.0.0.1:10809\\\"}, // 在拉取交易所数据时使用的代理池,没有代理则直接向交易所发起请求，国内可能会失败 })\"]},\"37\":{\"c\":[\"OpenApi\"]},\"38\":{\"c\":[\"OpenApi\"]},\"39\":{\"h\":\"OpenApi\",\"t\":[\"OpenApi 讲解\"]},\"40\":{\"c\":[\"OpenApi\"]},\"41\":{\"c\":[\"目录\"]},\"42\":{\"h\":\"OpenApi 2\",\"t\":[\"OpenApi\",\"该文档等待编辑 222\"]},\"43\":{\"c\":[\"OpenApi\"]},\"44\":{\"c\":[\"OpenApi\"]},\"45\":{\"h\":\"OpenApi 3\",\"t\":[\"OpenApi\",\"该文档等待编辑 333\"]},\"46\":{\"c\":[\"OpenApi\"]},\"47\":{\"c\":[\"OpenApi\"]},\"48\":{\"h\":\"OpenApi 4\",\"t\":[\"OpenApi\",\"该文档等待编辑 444\"]},\"49\":{\"c\":[\"OpenApi\"]},\"50\":{\"c\":[\"OpenApi\"]},\"51\":{\"h\":\"OpenApi 5\",\"t\":[\"OpenApi\",\"该文档等待编辑 555\"]},\"52\":{\"c\":[\"OpenApi\"]},\"53\":{\"c\":[\"OpenApi\"]},\"54\":{\"h\":\"操作指南\",\"t\":[\"操作指南\"]},\"55\":{\"c\":[\"操作指南\"]},\"56\":{\"c\":[\"目录\"]},\"57\":{\"h\":\"指南 1\",\"t\":[\"指南\",\"该文档等待编辑 11\"]},\"58\":{\"c\":[\"操作指南\"]},\"59\":{\"c\":[\"指南\"]},\"60\":{\"h\":\"指南 2\",\"t\":[\"指南\",\"该文档等待编辑 22\"]},\"61\":{\"c\":[\"操作指南\"]},\"62\":{\"c\":[\"指南\"]},\"63\":{\"h\":\"指南 3\",\"t\":[\"指南\",\"该文档等待编辑 33\"]},\"64\":{\"c\":[\"操作指南\"]},\"65\":{\"c\":[\"指南\"]},\"66\":{\"h\":\"指南 4\",\"t\":[\"指南\",\"该文档等待编辑 44\"]},\"67\":{\"c\":[\"操作指南\"]},\"68\":{\"c\":[\"指南\"]},\"69\":{\"h\":\"指南 5\",\"t\":[\"指南\",\"该文档等待编辑 55\"]},\"70\":{\"c\":[\"操作指南\"]},\"71\":{\"c\":[\"指南\"]},\"72\":{\"h\":\"指南 6\",\"t\":[\"指南\",\"该文档等待编辑 66\"]},\"73\":{\"c\":[\"操作指南\"]},\"74\":{\"c\":[\"指南\"]},\"75\":{\"h\":\"关于我们\",\"t\":[\"关于我们\"]},\"76\":{\"c\":[\"关于\"]},\"77\":{\"c\":[\"目录\"]},\"78\":{\"h\":\"产品架构\",\"t\":[\"产品架构\",\"该文档等待编辑\"]},\"79\":{\"c\":[\"关于\"]},\"80\":{\"c\":[\"产品架构\"]},\"81\":{\"h\":\"发展史\",\"t\":[\"发展史\",\"该文档等待编辑\"]},\"82\":{\"c\":[\"关于\"]},\"83\":{\"c\":[\"发展史\"]},\"84\":{\"h\":\"团队\",\"t\":[\"团队\",\"该文档等待编辑\"]},\"85\":{\"c\":[\"关于\"]},\"86\":{\"c\":[\"团队\"]},\"87\":{\"h\":\"愿景\",\"t\":[\"愿景\",\"该文档等待编辑\",\"您好，这里是小净写的第一句话。 您好，这里是小明写的第一句话。 您好，这是小净第一次debug。\"]},\"88\":{\"c\":[\"关于\"]},\"89\":{\"c\":[\"愿景\"]},\"90\":{\"h\":\"技术架构\",\"t\":[\"技术架构\",\"该文档等待编辑\"]},\"91\":{\"c\":[\"关于\"]},\"92\":{\"c\":[\"技术架构\"]},\"93\":{\"h\":\"目标\",\"t\":[\"目标\",\"该文档等待编辑\"]},\"94\":{\"c\":[\"关于\"]},\"95\":{\"c\":[\"目标\"]},\"96\":{\"h\":\"联系我们\",\"t\":[\"联系我们\",\"该文档等待编辑\"]},\"97\":{\"c\":[\"关于\"]},\"98\":{\"c\":[\"联系我们\"]},\"99\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"联系我们\",{\"0\":{\"96\":1},\"1\":{\"96\":1},\"2\":{\"98\":1}}],[\"技术架构\",{\"0\":{\"90\":1},\"1\":{\"90\":1},\"2\":{\"92\":1}}],[\"您好\",{\"1\":{\"87\":3}}],[\"愿景\",{\"0\":{\"87\":1},\"1\":{\"87\":1},\"2\":{\"89\":1}}],[\"团队\",{\"0\":{\"84\":1},\"1\":{\"84\":1},\"2\":{\"86\":1}}],[\"发展史\",{\"0\":{\"81\":1},\"1\":{\"81\":1},\"2\":{\"83\":1}}],[\"发出请求\",{\"1\":{\"36\":1}}],[\"指南\",{\"0\":{\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1},\"1\":{\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1},\"2\":{\"59\":1,\"62\":1,\"65\":1,\"68\":1,\"71\":1,\"74\":1}}],[\"操作指南\",{\"0\":{\"54\":1},\"1\":{\"54\":1},\"2\":{\"55\":1,\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"73\":1}}],[\"讲解\",{\"1\":{\"39\":1}}],[\"同时也方便了国内用户家用电脑的本地数据调试\",{\"1\":{\"36\":1}}],[\"同一台机器也可以同时初始化多份程序\",{\"1\":{\"36\":1}}],[\"频率限制\",{\"1\":{\"36\":1}}],[\"它会随机使用其中可用的\",{\"1\":{\"36\":1}}],[\"地址\",{\"1\":{\"36\":1}}],[\"池的设定\",{\"1\":{\"36\":1}}],[\"请求代理\",{\"1\":{\"36\":1}}],[\"请求参数也比较繁琐\",{\"1\":{\"28\":1}}],[\"迁移数据只需要迁移对应的目录即可\",{\"1\":{\"36\":1}}],[\"若一次请求\",{\"1\":{\"36\":1}}],[\"多个不同的数据目录同时进行读写\",{\"1\":{\"36\":1}}],[\"则只会去交易所请求那一个没有的文件\",{\"1\":{\"36\":1}}],[\"则会直接读取并返回\",{\"1\":{\"36\":1}}],[\"则为\",{\"1\":{\"31\":2}}],[\"并在请求来临时检查对应所需文件的完整性\",{\"1\":{\"36\":1}}],[\"并且使用和部署方式以及环境依赖都极为简单\",{\"1\":{\"33\":1}}],[\"设置好\",{\"1\":{\"36\":1}}],[\"在系统初始化时\",{\"1\":{\"36\":1}}],[\"在拉取交易所数据时使用的代理池\",{\"1\":{\"30\":1,\"36\":1}}],[\"代理请求\",{\"0\":{\"36\":1}}],[\"代码示例\",{\"0\":{\"30\":1}}],[\"还能充分利用各个服务器冗余的资源和空间\",{\"1\":{\"35\":1}}],[\"将来想要扩充交易所或者是\",{\"1\":{\"35\":1}}],[\"将来开发\",{\"1\":{\"34\":1}}],[\"之外\",{\"1\":{\"35\":1}}],[\"z\",{\"1\":{\"35\":1}}],[\"关于\",{\"2\":{\"76\":1,\"79\":1,\"82\":1,\"85\":1,\"88\":1,\"91\":1,\"94\":1,\"97\":1}}],[\"关于我们\",{\"0\":{\"75\":1},\"1\":{\"75\":1}}],[\"关于时间范围为\",{\"1\":{\"35\":1}}],[\"关于币种\",{\"1\":{\"35\":1}}],[\"关于交易所\",{\"1\":{\"35\":1}}],[\"服务器\",{\"1\":{\"35\":1}}],[\"服务器分布式部署思路\",{\"0\":{\"35\":1}}],[\"a\",{\"1\":{\"35\":3}}],[\"api\",{\"1\":{\"30\":8,\"34\":1}}],[\"可以罗列一份规则清单和转发地址\",{\"1\":{\"35\":1}}],[\"插件时\",{\"1\":{\"34\":1}}],[\"而且\",{\"1\":{\"34\":1}}],[\"而且这种\",{\"1\":{\"33\":1}}],[\"于是就设计成了\",{\"1\":{\"34\":1}}],[\"于是花了一个周末的时间重新肝了一个版本\",{\"1\":{\"28\":1}}],[\"包一层\",{\"1\":{\"34\":1}}],[\"也需要用到这个模块\",{\"1\":{\"34\":1}}],[\"也非常轻量化\",{\"1\":{\"34\":1}}],[\"也就是一台硬盘空间\",{\"1\":{\"33\":1}}],[\"也就是说\",{\"1\":{\"33\":1}}],[\"也就是说该列表的任意货币都可以在\",{\"1\":{\"31\":1}}],[\"也就是同样的数据一口气读取上万条本地耗时不会超过\",{\"1\":{\"33\":1}}],[\"也就是需要每个交易所需要请求\",{\"1\":{\"33\":1}}],[\"效率非常高\",{\"1\":{\"34\":1}}],[\"所以分布式部署除了增加转发时额外的网络\",{\"1\":{\"35\":1}}],[\"所以即用即走\",{\"1\":{\"34\":1}}],[\"所以最好的就是这种精巧的方式进行存储和传输\",{\"1\":{\"31\":1}}],[\"基于本地文件专门设计的读写和寻址方式\",{\"1\":{\"34\":1}}],[\"基础货币\",{\"1\":{\"31\":1}}],[\"根据\",{\"1\":{\"34\":1}}],[\"程序初始化允许填写多个代理\",{\"1\":{\"36\":1}}],[\"程序会自动补全缺失的文件\",{\"1\":{\"36\":1}}],[\"程序会自动接管该目录\",{\"1\":{\"36\":1}}],[\"程序设计思路\",{\"0\":{\"34\":1}}],[\"程序架构图\",{\"0\":{\"32\":1}}],[\"年积累的全部\",{\"1\":{\"33\":1}}],[\"空间\",{\"1\":{\"33\":1}}],[\"占据\",{\"1\":{\"33\":1}}],[\"来算12\",{\"1\":{\"33\":1}}],[\"按照\",{\"1\":{\"33\":1}}],[\"+\",{\"1\":{\"33\":4}}],[\"无论怎么实现都需要\",{\"1\":{\"34\":1}}],[\"无论是任何间隔的\",{\"1\":{\"33\":1}}],[\"无需数据库\",{\"1\":{\"34\":1}}],[\"无需\",{\"1\":{\"34\":1}}],[\"无需索引直接通过算法直达的\",{\"1\":{\"33\":1}}],[\"通用型数据还是数据库更合适\",{\"1\":{\"33\":1}}],[\"这是小净第一次debug\",{\"1\":{\"87\":1}}],[\"这是针对\",{\"1\":{\"33\":1}}],[\"这里是小明写的第一句话\",{\"1\":{\"87\":1}}],[\"这里是小净写的第一句话\",{\"1\":{\"87\":1}}],[\"这里综合了\",{\"1\":{\"31\":1}}],[\"这种特殊结构专门设计的\",{\"1\":{\"33\":1}}],[\"实现方式不会因为\",{\"1\":{\"33\":1}}],[\"实测\",{\"1\":{\"33\":2}}],[\"毫秒\",{\"1\":{\"33\":1}}],[\"读取耗时\",{\"1\":{\"33\":1}}],[\"本地\",{\"1\":{\"33\":1}}],[\"曾经写一款小时版本的策略\",{\"1\":{\"33\":1}}],[\"耗时\",{\"1\":{\"33\":1}}],[\"直接从本地读取\",{\"1\":{\"33\":1}}],[\"第二次获取相同的数据\",{\"1\":{\"33\":1}}],[\"第一次获取\",{\"1\":{\"33\":1}}],[\"加上本地网络共耗时\",{\"1\":{\"33\":1}}],[\"84000\",{\"1\":{\"33\":1}}],[\"88\",{\"1\":{\"33\":1}}],[\"8700\",{\"1\":{\"33\":1}}],[\"8\",{\"1\":{\"33\":1}}],[\"一开始是打算设计成独立服务去单独部署的\",{\"1\":{\"34\":1}}],[\"一年的文件总数为\",{\"1\":{\"33\":1}}],[\"一年数据量\",{\"1\":{\"33\":1}}],[\"一个交易所一年全部币种的数据全部进行本地存储\",{\"1\":{\"33\":1}}],[\"一个交易所有效的交易币种不超过\",{\"1\":{\"33\":1}}],[\"一个币种一个交易所一年占用的存储空间约为\",{\"1\":{\"33\":1}}],[\"一个币种\",{\"1\":{\"33\":1}}],[\"一个文件占据空为\",{\"1\":{\"33\":1}}],[\"一个合约\",{\"1\":{\"31\":1}}],[\"一共\",{\"1\":{\"33\":1}}],[\"次请求\",{\"1\":{\"33\":1}}],[\"次\",{\"1\":{\"33\":1}}],[\"条\",{\"1\":{\"33\":2}}],[\"清除掉本地所有的数据\",{\"1\":{\"33\":1}}],[\"性能实测\",{\"0\":{\"33\":1}}],[\"jsoniter\",{\"1\":{\"31\":1}}],[\"xxxxx\",{\"1\":{\"31\":1}}],[\"解析方式\",{\"1\":{\"31\":1}}],[\"解析方式也不统一\",{\"1\":{\"28\":1}}],[\"7000\",{\"1\":{\"33\":2}}],[\"70毫秒\",{\"1\":{\"33\":1}}],[\"7\",{\"1\":{\"31\":1}}],[\"结构体如下\",{\"1\":{\"31\":1}}],[\"结算币种\",{\"1\":{\"31\":1}}],[\"对应的\",{\"1\":{\"31\":1}}],[\"成交额\",{\"1\":{\"31\":1}}],[\"成交量\",{\"1\":{\"31\":1}}],[\"成交量总和\",{\"1\":{\"31\":1}}],[\"收盘价\",{\"1\":{\"31\":1}}],[\"q\",{\"1\":{\"31\":4}}],[\"quoteccy\",{\"1\":{\"31\":4}}],[\"因为本地文件碎片化的属性\",{\"1\":{\"35\":1}}],[\"因为是\",{\"1\":{\"34\":1}}],[\"因为\",{\"1\":{\"31\":1}}],[\"vscode\",{\"1\":{\"34\":1}}],[\"v\",{\"1\":{\"31\":4}}],[\"volume\",{\"1\":{\"31\":2}}],[\"var\",{\"1\":{\"30\":3,\"31\":3}}],[\"开盘价\",{\"1\":{\"31\":3}}],[\"涨幅\",{\"1\":{\"31\":1}}],[\"redis\",{\"1\":{\"34\":1}}],[\"range\",{\"1\":{\"31\":1}}],[\"r24\",{\"1\":{\"31\":2}}],[\"run\",{\"1\":{\"30\":1}}],[\"小时成交\",{\"1\":{\"31\":1}}],[\"榜单数据\",{\"1\":{\"31\":1}}],[\"标的指数\",{\"1\":{\"31\":1}}],[\"下单价格精度\",{\"1\":{\"31\":1}}],[\"下架时间\",{\"1\":{\"31\":1}}],[\"其中三个文件本地有\",{\"1\":{\"36\":1}}],[\"其效率并未有差别\",{\"1\":{\"35\":1}}],[\"其性能完全碾压各大数据库\",{\"1\":{\"33\":1}}],[\"其余文件直接读取返回\",{\"1\":{\"36\":1}}],[\"其余具体详细可查看源码\",{\"1\":{\"31\":1}}],[\"其余状态将被过滤\",{\"1\":{\"31\":1}}],[\"其实团队内小伙伴写了一个版本的市场\",{\"1\":{\"28\":1}}],[\"产品架构\",{\"0\":{\"78\":1},\"1\":{\"78\":1},\"2\":{\"80\":1}}],[\"产品状态\",{\"1\":{\"31\":1}}],[\"产品类型\",{\"1\":{\"31\":1}}],[\"计划委托委托的单笔最大委托数量\",{\"1\":{\"31\":1}}],[\"计价货币币种\",{\"1\":{\"31\":1}}],[\"计价货币\",{\"1\":{\"31\":1}}],[\"止盈止损市价委托的单笔最大委托数量\",{\"1\":{\"31\":1}}],[\"市价单的单笔最大委托数量\",{\"1\":{\"31\":1}}],[\"市场模块coin\",{\"0\":{\"28\":1}}],[\"限价单最大委托数量\",{\"1\":{\"31\":1}}],[\"冰山委托的单笔最大委托数量\",{\"1\":{\"31\":1}}],[\"数量\",{\"1\":{\"31\":3}}],[\"数据不完整则会去交易所拿取最新数据并覆盖\",{\"1\":{\"36\":1}}],[\"数据的迁移\",{\"0\":{\"36\":1}}],[\"数据拼接整理并返回\",{\"1\":{\"33\":1}}],[\"数据结构示意\",{\"0\":{\"31\":1}}],[\"数据文件存放目录\",{\"1\":{\"30\":1,\"36\":1}}],[\"张数\",{\"1\":{\"31\":1}}],[\"最新价\",{\"1\":{\"31\":1}}],[\"最新成交价\",{\"1\":{\"31\":1}}],[\"最低价\",{\"1\":{\"31\":2}}],[\"最高价\",{\"1\":{\"31\":2}}],[\"最小下单数量\",{\"1\":{\"31\":2}}],[\"最后更新时间\",{\"1\":{\"30\":1}}],[\"上架时间\",{\"1\":{\"31\":1}}],[\"支持的最大杠杆倍率\",{\"1\":{\"31\":1}}],[\"或者\",{\"1\":{\"31\":1}}],[\"期权\",{\"1\":{\"31\":1}}],[\"永续\",{\"1\":{\"31\":1}}],[\"交割\",{\"1\":{\"31\":1}}],[\"交易中\",{\"1\":{\"31\":1}}],[\"交易品数量\",{\"1\":{\"31\":1}}],[\"交易品种\",{\"1\":{\"31\":1}}],[\"交易品现货状态\",{\"1\":{\"31\":2}}],[\"交易货币币种\",{\"1\":{\"31\":1}}],[\"交易所请求规范和行为不统一\",{\"1\":{\"28\":1}}],[\"仅适用于杠杆\",{\"1\":{\"31\":1}}],[\"仅适用于币币交易\",{\"1\":{\"31\":1}}],[\"仅适用于币币\",{\"1\":{\"31\":1}}],[\"个文件\",{\"1\":{\"36\":1}}],[\"个\",{\"1\":{\"31\":1}}],[\"反向合约\",{\"1\":{\"31\":1}}],[\"正向合约\",{\"1\":{\"31\":1}}],[\"币种名称\",{\"1\":{\"31\":1}}],[\"币币杠杆\",{\"1\":{\"31\":1}}],[\"币安占比总交易量\",{\"1\":{\"31\":1}}],[\"币安的主键\",{\"1\":{\"31\":1}}],[\"币安交易所的完整产品信息\",{\"1\":{\"31\":1}}],[\"币安\",{\"1\":{\"31\":3,\"33\":1}}],[\"中的usdt\",{\"1\":{\"31\":1}}],[\"中的\",{\"1\":{\"31\":1}}],[\"warning\",{\"1\":{\"31\":2}}],[\"有一家状态不对\",{\"1\":{\"31\":2}}],[\"合约的数量单位是张\",{\"1\":{\"31\":3}}],[\"合约为\",{\"1\":{\"31\":1}}],[\"合约面值计价币种\",{\"1\":{\"31\":1}}],[\"合约面值\",{\"1\":{\"31\":1}}],[\"合约类型\",{\"1\":{\"31\":1}}],[\"合约乘数\",{\"1\":{\"31\":1}}],[\"合约\",{\"1\":{\"31\":3}}],[\"现货的数量单位是交易货币\",{\"1\":{\"31\":1}}],[\"现货的数量单位是usdt\",{\"1\":{\"31\":2}}],[\"现货则为\",{\"1\":{\"31\":1}}],[\"现货\",{\"1\":{\"31\":5}}],[\"默认\",{\"1\":{\"31\":2}}],[\"如果数据完整\",{\"1\":{\"36\":1}}],[\"如果提前计算好\",{\"1\":{\"35\":1}}],[\"如\",{\"1\":{\"31\":12}}],[\"为准\",{\"1\":{\"31\":1}}],[\"以避免触发交易所的\",{\"1\":{\"36\":1}}],[\"以\",{\"1\":{\"31\":1}}],[\"的转发到服务器\",{\"1\":{\"35\":1}}],[\"的可以转发到服务器\",{\"1\":{\"35\":1}}],[\"的请求转发到\",{\"1\":{\"35\":1}}],[\"的实现方式则更加灵活和便捷\",{\"1\":{\"34\":1}}],[\"的方式\",{\"1\":{\"34\":1}}],[\"的服务器就能存下两个交易所\",{\"1\":{\"33\":1}}],[\"的完整产品信息\",{\"1\":{\"31\":2}}],[\"的交易品id\",{\"1\":{\"31\":1}}],[\"的正整数\",{\"1\":{\"30\":1}}],[\"`\",{\"1\":{\"31\":50}}],[\"`json\",{\"1\":{\"31\":50}}],[\"哪怕一分钟更新一次都没问题\",{\"1\":{\"31\":1}}],[\"说明该币种在其中一个交易所的状态出现了问题\",{\"1\":{\"31\":1}}],[\"时间跨度超过了\",{\"1\":{\"36\":1}}],[\"时间戳\",{\"1\":{\"31\":1}}],[\"时间加权单的单笔最大委托数量\",{\"1\":{\"31\":1}}],[\"时\",{\"1\":{\"31\":1}}],[\"不为\",{\"1\":{\"31\":1}}],[\"当然\",{\"1\":{\"33\":1}}],[\"当\",{\"1\":{\"31\":1}}],[\"两大交易所随时进行交易\",{\"1\":{\"31\":1}}],[\"两个交易所的公共货币\",{\"1\":{\"31\":1}}],[\"欧意占比总交易量\",{\"1\":{\"31\":1}}],[\"欧意的主键\",{\"1\":{\"31\":1}}],[\"欧意交易所\",{\"1\":{\"31\":2}}],[\"欧意\",{\"1\":{\"31\":1}}],[\"商品信息数据结构\",{\"1\":{\"31\":1}}],[\"商品总数\",{\"1\":{\"30\":1}}],[\"查看打印结果\",{\"1\":{\"30\":1}}],[\"执行\",{\"1\":{\"30\":1}}],[\"然后\",{\"1\":{\"30\":1}}],[\"创建文件\",{\"1\":{\"30\":1}}],[\"安装依赖\",{\"1\":{\"30\":1}}],[\"安装方式\",{\"0\":{\"29\":1}}],[\"总长度\",{\"1\":{\"30\":1}}],[\"总目录\",{\"0\":{\"22\":1},\"2\":{\"23\":1}}],[\"diff\",{\"1\":{\"30\":3}}],[\"data\",{\"1\":{\"30\":1,\"36\":1}}],[\"datapath\",{\"1\":{\"30\":1,\"36\":2}}],[\"和\",{\"0\":{\"36\":1},\"1\":{\"30\":2,\"33\":1}}],[\"目标\",{\"0\":{\"93\":1},\"1\":{\"93\":1},\"2\":{\"95\":1}}],[\"目前只支持\",{\"1\":{\"30\":1}}],[\"目录\",{\"2\":{\"3\":1,\"24\":1,\"41\":1,\"56\":1,\"77\":1}}],[\"需要经常用到的数据就进行内存缓存\",{\"1\":{\"34\":1}}],[\"需要请求的交易所\",{\"1\":{\"30\":1}}],[\"需要用到\",{\"1\":{\"28\":1}}],[\"位毫秒时间戳\",{\"1\":{\"30\":1}}],[\"允许值\",{\"1\":{\"30\":1}}],[\"b\",{\"1\":{\"35\":1}}],[\"baseccy\",{\"1\":{\"31\":6}}],[\"bar\",{\"1\":{\"30\":1}}],[\"binancevolrose\",{\"1\":{\"31\":2}}],[\"binancevol24h\",{\"1\":{\"31\":2}}],[\"binancesymboltype\",{\"1\":{\"31\":1}}],[\"binanceinfo\",{\"1\":{\"31\":2}}],[\"binance\",{\"1\":{\"30\":3,\"31\":5}}],[\"btc\",{\"1\":{\"30\":2,\"31\":12}}],[\"任意时间点和任意币种的\",{\"1\":{\"30\":1}}],[\"今日上榜币种数量\",{\"1\":{\"30\":1}}],[\"unmarshal\",{\"1\":{\"31\":1}}],[\"u\",{\"1\":{\"31\":2}}],[\"uly\",{\"1\":{\"31\":2}}],[\"usd\",{\"1\":{\"31\":2}}],[\"usdt\",{\"1\":{\"30\":2,\"31\":9}}],[\"updateunix\",{\"1\":{\"31\":2}}],[\"updatestr\",{\"1\":{\"30\":1,\"31\":2}}],[\"updatelocalticker\",{\"1\":{\"30\":1}}],[\"updatelocalgoodslist\",{\"1\":{\"30\":1}}],[\"获取k线数据失败\",{\"1\":{\"30\":1}}],[\"获取榜单数据失败\",{\"1\":{\"30\":1}}],[\"获取榜单数据\",{\"1\":{\"30\":1}}],[\"获取商品详情失败\",{\"1\":{\"30\":1}}],[\"获取商品列表失败\",{\"1\":{\"30\":1}}],[\"获取商品列表的方法\",{\"1\":{\"30\":1}}],[\"获取单个商品的详情\",{\"1\":{\"30\":1}}],[\"l\",{\"1\":{\"31\":4}}],[\"last\",{\"1\":{\"31\":2}}],[\"laysp\",{\"1\":{\"30\":2}}],[\"low24h\",{\"1\":{\"31\":2}}],[\"lotsz\",{\"1\":{\"31\":2}}],[\"logs\",{\"1\":{\"30\":1,\"36\":1}}],[\"logpath\",{\"1\":{\"30\":1,\"36\":1}}],[\"lever\",{\"1\":{\"31\":2}}],[\"len\",{\"1\":{\"30\":3}}],[\"listtime\",{\"1\":{\"31\":2}}],[\"linear\",{\"1\":{\"31\":1}}],[\"live\",{\"1\":{\"31\":4}}],[\"limit\",{\"1\":{\"30\":1}}],[\"not\",{\"1\":{\"99\":1}}],[\"nil\",{\"1\":{\"30\":4}}],[\"new\",{\"1\":{\"30\":1}}],[\"ip\",{\"1\":{\"36\":4}}],[\"i\",{\"1\":{\"35\":1}}],[\"item\",{\"1\":{\"31\":8}}],[\"insttype\",{\"1\":{\"31\":2}}],[\"instid\",{\"1\":{\"31\":4}}],[\"instfamily\",{\"1\":{\"31\":2}}],[\"inverse\",{\"1\":{\"31\":1}}],[\"info\",{\"1\":{\"31\":4}}],[\"int64\",{\"1\":{\"31\":2}}],[\"if\",{\"1\":{\"30\":4}}],[\"import\",{\"1\":{\"30\":1}}],[\"=\",{\"1\":{\"30\":14,\"31\":5,\"33\":2}}],[\"exptime\",{\"1\":{\"31\":2}}],[\"exchange\",{\"1\":{\"30\":9}}],[\"endtime\",{\"1\":{\"30\":3}}],[\"err\",{\"1\":{\"30\":12}}],[\"每4小时执行一次更新\",{\"1\":{\"30\":1}}],[\"更新时间\",{\"1\":{\"31\":1}}],[\"更新时间戳\",{\"1\":{\"31\":1}}],[\"更新频率可以在程序初始化时自定\",{\"1\":{\"31\":1}}],[\"更新榜单数据至本地\",{\"1\":{\"30\":1}}],[\"更新商品列表至本地\",{\"1\":{\"30\":1}}],[\"o\",{\"1\":{\"31\":4,\"35\":1}}],[\"openapi\",{\"0\":{\"39\":1,\"42\":1,\"45\":1,\"48\":1,\"51\":1},\"1\":{\"39\":1,\"42\":1,\"45\":1,\"48\":1,\"51\":1},\"2\":{\"37\":1,\"38\":1,\"40\":1,\"43\":1,\"44\":1,\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"52\":1,\"53\":1}}],[\"open\",{\"1\":{\"34\":1}}],[\"open24h\",{\"1\":{\"31\":2}}],[\"opt\",{\"1\":{\"30\":1}}],[\"okxkline\",{\"1\":{\"31\":2}}],[\"okxvolrose\",{\"1\":{\"31\":2}}],[\"okxvol24h\",{\"1\":{\"31\":2}}],[\"okxinsttype\",{\"1\":{\"31\":3}}],[\"okx\",{\"1\":{\"30\":2,\"31\":15,\"33\":1}}],[\"ottertrade\",{\"1\":{\"31\":1}}],[\"otter\",{\"1\":{\"28\":1,\"29\":1,\"30\":2}}],[\"启动一个定时器\",{\"1\":{\"30\":1}}],[\"国内可能会失败\",{\"1\":{\"30\":1,\"36\":1}}],[\"国内获取数据需要科学上网\",{\"1\":{\"28\":1}}],[\"没有代理则直接向交易所发起请求\",{\"1\":{\"30\":1,\"36\":1}}],[\"08\",{\"1\":{\"33\":1}}],[\"0001\",{\"1\":{\"31\":1}}],[\"01\",{\"1\":{\"31\":1}}],[\"06\",{\"1\":{\"30\":1}}],[\"05\",{\"1\":{\"30\":2}}],[\"0\",{\"1\":{\"30\":2,\"31\":3,\"33\":1,\"36\":2}}],[\"sdk\",{\"1\":{\"34\":2}}],[\"symbol\",{\"1\":{\"31\":2}}],[\"sysinitopt\",{\"1\":{\"30\":1,\"36\":1}}],[\"sysinit\",{\"1\":{\"30\":1,\"36\":1}}],[\"settleccy\",{\"1\":{\"31\":2}}],[\"swap\",{\"1\":{\"31\":4}}],[\"spot\",{\"1\":{\"31\":3}}],[\"ss\",{\"1\":{\"30\":2}}],[\"struct\",{\"1\":{\"31\":3}}],[\"string\",{\"1\":{\"30\":2,\"31\":47,\"36\":1}}],[\"state\",{\"1\":{\"31\":7}}],[\"starttime\",{\"1\":{\"30\":2}}],[\"start\",{\"1\":{\"30\":1}}],[\"sleeptime\",{\"1\":{\"30\":1}}],[\"println\",{\"1\":{\"30\":9}}],[\"proxyurls\",{\"1\":{\"30\":1,\"36\":1}}],[\"package\",{\"1\":{\"30\":1}}],[\"缺省值\",{\"1\":{\"30\":2,\"36\":2}}],[\"日志文件存放目录\",{\"1\":{\"30\":1,\"36\":1}}],[\"初始化项目配置\",{\"1\":{\"30\":1,\"36\":1}}],[\"found\",{\"1\":{\"99\":1}}],[\"for\",{\"1\":{\"31\":1}}],[\"fetchdata\",{\"1\":{\"31\":2}}],[\"func\",{\"1\":{\"30\":3}}],[\"fmt\",{\"1\":{\"30\":10}}],[\"mongodb\",{\"1\":{\"33\":1}}],[\"mod\",{\"1\":{\"30\":1}}],[\"minsz\",{\"1\":{\"31\":2}}],[\"map\",{\"1\":{\"31\":1}}],[\"maxtwapsz\",{\"1\":{\"31\":2}}],[\"maxtriggersz\",{\"1\":{\"31\":2}}],[\"maxstopsz\",{\"1\":{\"31\":2}}],[\"maxmktsz\",{\"1\":{\"31\":2}}],[\"maxlmtsz\",{\"1\":{\"31\":2}}],[\"maxicebergsz\",{\"1\":{\"31\":2}}],[\"main\",{\"1\":{\"30\":3}}],[\"m\",{\"1\":{\"30\":11}}],[\"h\",{\"1\":{\"31\":4}}],[\"high24h\",{\"1\":{\"31\":2}}],[\"hour\",{\"1\":{\"30\":1}}],[\"http\",{\"1\":{\"30\":1,\"31\":1,\"34\":1,\"36\":1}}],[\"https\",{\"1\":{\"28\":1}}],[\"handy\",{\"1\":{\"30\":2}}],[\"type\",{\"1\":{\"31\":5}}],[\"tickertype\",{\"1\":{\"31\":1}}],[\"tickerlist\",{\"1\":{\"30\":3}}],[\"ticksz\",{\"1\":{\"31\":2}}],[\"tidy\",{\"1\":{\"30\":1}}],[\"timestr\",{\"1\":{\"31\":3}}],[\"timeunix\",{\"1\":{\"31\":3}}],[\"timeparse\",{\"1\":{\"30\":2}}],[\"time\",{\"1\":{\"30\":14,\"31\":2}}],[\"tools\",{\"1\":{\"30\":2}}],[\"trade\",{\"1\":{\"28\":1,\"29\":1,\"30\":2}}],[\"gb\",{\"1\":{\"33\":2}}],[\"global\",{\"1\":{\"30\":4,\"31\":1,\"36\":2}}],[\"getklineopt\",{\"1\":{\"30\":1}}],[\"getkline\",{\"1\":{\"30\":1}}],[\"getunixint64\",{\"1\":{\"30\":3}}],[\"gettickerlist\",{\"1\":{\"30\":1}}],[\"getgoodsdetailopt\",{\"1\":{\"30\":1}}],[\"getgoodsdetail\",{\"1\":{\"30\":1}}],[\"getgoodslist\",{\"1\":{\"30\":1}}],[\"get\",{\"1\":{\"29\":1,\"31\":1}}],[\"goodstype\",{\"1\":{\"31\":1}}],[\"goodsid\",{\"1\":{\"30\":3,\"31\":4}}],[\"goodsdetail\",{\"1\":{\"30\":4}}],[\"goodslist\",{\"1\":{\"30\":3}}],[\"golang\",{\"1\":{\"30\":2}}],[\"go\",{\"1\":{\"29\":1,\"30\":5,\"31\":1}}],[\"github\",{\"1\":{\"28\":1,\"29\":1,\"30\":4}}],[\"但是可以支持更多的高并发和存储空间\",{\"1\":{\"35\":1}}],[\"但是因为提供给用户使用的是\",{\"1\":{\"34\":1}}],[\"但是频繁去交易所获取效率太慢\",{\"1\":{\"28\":1}}],[\"但并不满意\",{\"1\":{\"28\":1}}],[\"线类型可以说都非常容易且无缝衔接\",{\"1\":{\"35\":1}}],[\"线数据\",{\"1\":{\"33\":1}}],[\"线数据其一个文件体积都是一样的\",{\"1\":{\"33\":1}}],[\"线的特点\",{\"1\":{\"34\":1}}],[\"线的数据量体积比较大\",{\"1\":{\"31\":1}}],[\"线的消耗比较大\",{\"1\":{\"28\":1}}],[\"线\",{\"1\":{\"31\":1,\"33\":1}}],[\"线服务\",{\"1\":{\"28\":1}}],[\"线模块的服务太多了\",{\"1\":{\"28\":1}}],[\"kb\",{\"1\":{\"33\":1}}],[\"kitem\",{\"1\":{\"31\":1}}],[\"klinetype\",{\"1\":{\"31\":1}}],[\"klineexchangemap\",{\"1\":{\"31\":2}}],[\"klinesimptype\",{\"1\":{\"31\":4}}],[\"kline\",{\"1\":{\"30\":1}}],[\"klinemap\",{\"1\":{\"30\":2,\"31\":3}}],[\"k线数据获取\",{\"1\":{\"30\":1}}],[\"k\",{\"1\":{\"28\":3,\"31\":3,\"33\":3,\"34\":1,\"35\":1}}],[\"回测时对\",{\"1\":{\"28\":1}}],[\"要解决的问题\",{\"1\":{\"28\":1}}],[\"c\",{\"1\":{\"31\":4,\"35\":2}}],[\"ctvalccy\",{\"1\":{\"31\":2}}],[\"ctval\",{\"1\":{\"31\":2}}],[\"cttype\",{\"1\":{\"31\":2}}],[\"ctmult\",{\"1\":{\"31\":2}}],[\"cycle\",{\"1\":{\"30\":3}}],[\"coin\",{\"1\":{\"28\":1,\"29\":1,\"30\":2}}],[\"com\",{\"1\":{\"28\":1,\"29\":1,\"30\":4}}],[\"candle\",{\"0\":{\"28\":1},\"1\":{\"28\":1,\"29\":1,\"30\":2}}],[\"仓库地址\",{\"1\":{\"28\":1}}],[\"博文\",{\"2\":{\"27\":1}}],[\"快速访问\",{\"0\":{\"25\":1},\"2\":{\"26\":1}}],[\"快速上手教程\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"快速上手\",{\"0\":{\"1\":1},\"2\":{\"2\":1,\"5\":1,\"8\":1,\"11\":1,\"14\":1,\"17\":1,\"20\":1}}],[\"6924\",{\"1\":{\"33\":1}}],[\"66\",{\"1\":{\"19\":1,\"72\":1}}],[\"6\",{\"0\":{\"19\":1,\"72\":1},\"1\":{\"31\":1,\"33\":1}}],[\"5257\",{\"1\":{\"33\":1}}],[\"500\",{\"1\":{\"30\":1}}],[\"5m\",{\"1\":{\"30\":1}}],[\"56\",{\"1\":{\"30\":1}}],[\"555\",{\"1\":{\"51\":1}}],[\"55\",{\"1\":{\"16\":1,\"30\":1,\"69\":1}}],[\"5\",{\"0\":{\"16\":1,\"51\":1,\"69\":1},\"1\":{\"31\":1}}],[\"404\",{\"1\":{\"99\":1}}],[\"43\",{\"1\":{\"30\":2}}],[\"444\",{\"1\":{\"48\":1}}],[\"44\",{\"1\":{\"13\":1,\"66\":1}}],[\"4\",{\"0\":{\"13\":1,\"48\":1,\"66\":1},\"1\":{\"30\":1,\"31\":1,\"33\":1,\"36\":1}}],[\"351\",{\"1\":{\"33\":1}}],[\"3685毫秒\",{\"1\":{\"33\":1}}],[\"320\",{\"1\":{\"30\":1,\"33\":1}}],[\"30m\",{\"1\":{\"30\":1}}],[\"333\",{\"1\":{\"45\":1}}],[\"33\",{\"1\":{\"10\":1,\"63\":1}}],[\"3\",{\"0\":{\"10\":1,\"45\":1,\"63\":1},\"1\":{\"31\":1}}],[\"200\",{\"1\":{\"33\":1}}],[\"2024\",{\"1\":{\"30\":1}}],[\"2023\",{\"1\":{\"30\":1}}],[\"283\",{\"1\":{\"33\":1}}],[\"2毫秒\",{\"1\":{\"33\":1}}],[\"240\",{\"1\":{\"33\":1}}],[\"24\",{\"1\":{\"31\":1}}],[\"24小时成交量\",{\"1\":{\"31\":1}}],[\"24小时开盘价\",{\"1\":{\"31\":1}}],[\"21\",{\"1\":{\"30\":1}}],[\"222\",{\"1\":{\"42\":1}}],[\"22\",{\"1\":{\"7\":1,\"60\":1}}],[\"2\",{\"0\":{\"7\":1,\"42\":1,\"60\":1},\"1\":{\"31\":1}}],[\"教程\",{\"2\":{\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"18\":1,\"21\":1}}],[\"该文档等待编辑\",{\"1\":{\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"42\":1,\"45\":1,\"48\":1,\"51\":1,\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"78\":1,\"81\":1,\"84\":1,\"87\":1,\"90\":1,\"93\":1,\"96\":1}}],[\"16gb\",{\"1\":{\"33\":1}}],[\"1052\",{\"1\":{\"33\":1}}],[\"10809\",{\"1\":{\"30\":1,\"36\":1}}],[\"176\",{\"1\":{\"33\":1}}],[\"12kb\",{\"1\":{\"33\":1}}],[\"127\",{\"1\":{\"30\":1,\"36\":1}}],[\"13\",{\"1\":{\"30\":1}}],[\"1h\",{\"1\":{\"30\":1}}],[\"15m\",{\"1\":{\"30\":1}}],[\"1m\",{\"1\":{\"30\":2}}],[\"18\",{\"1\":{\"30\":2}}],[\"11\",{\"1\":{\"4\":1,\"57\":1}}],[\"1\",{\"0\":{\"4\":1,\"28\":1,\"57\":1},\"1\":{\"30\":2,\"31\":1,\"36\":1}}],[\"文件数量的增多而增加查询耗时\",{\"1\":{\"33\":1}}],[\"文章\",{\"0\":{\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"文档首页\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
